{
    "name": "coc-sonarlint",
    "version": "1.0.2",
    "description": "Coc sonar lint language server extension client",
    "license": "MIT",
    "main": "lib/index.js",
    "repository": {
        "type": "git",
        "url": "https://github.com/asmodeus812/coc-sonarlint"
    },
    "keywords": [
        "coc.nvim"
    ],
    "engines": {
        "coc": "^0.0.82"
    },
    "scripts": {
        "watch": "node esbuild.mjs --watch",
        "build": "node esbuild.mjs",
        "prepare": "node esbuild.mjs"
    },
    "dependencies": {
        "css": "^3.0.0",
        "diff": "^8.0.2",
        "highlight.js": "^11.11.1",
        "inly": "^5.0.1",
        "juice": "10.0.1",
        "lodash": "^4.14.194",
        "node-html-markdown": "1.3.0",
        "node-html-parser": "6.1.13",
        "openpgp": "^6.2.2",
        "underscore": "^1.13.7"
    },
    "devDependencies": {
        "@xmldom/xmldom": "^0.8.11",
        "coc.nvim": "^0.0.83-next.18",
        "compare-versions": "^6.1.1",
        "esbuild": "^0.19.8",
        "expand-home-dir": "^0.0.3",
        "find-java-home": "^2.0.0",
        "follow-redirects": "^1.15.11",
        "fs-extra": "^11.3.2",
        "luxon": "^3.7.2",
        "path-exists": "4.0.0",
        "typescript": "^5.3.3"
    },
    "activationEvents": [
        "onLanguage:c",
        "onLanguage:cpp",
        "onLanguage:cuda",
        "onLanguage:yaml",
        "onLanguage:json",
        "onLanguage:jsonc",
        "onLanguage:objc",
        "onLanguage:objcpp",
        "onLanguage:opencl",
        "onLanguage:objective-c",
        "onLanguage:objective-cpp",
        "onLanguage:php",
        "onLanguage:java",
        "onLanguage:cs",
        "onLanguage:vb",
        "onLanguage:css",
        "onLanguage:less",
        "onLanguage:scss",
        "onLanguage:go",
        "onLanguage:gomod",
        "onLanguage:python",
        "onLanguage:jupyter",
        "onLanguage:jsx-tags",
        "onLanguage:javascript",
        "onLanguage:javascriptreact",
        "onLanguage:javascript.jsx",
        "onLanguage:typescript",
        "onLanguage:typescript.tsx",
        "onLanguage:typescript.jsx",
        "onLanguage:typescriptreact",
        "workspaceContains:.sonar.properties"
    ],
    "contributes": {
        "configuration": {
            "type": "object",
            "title": "SonarLint",
            "properties": {
                "sonarlint.rules": {
                    "order": 1,
                    "type": "object",
                    "scope": "application",
                    "default": {},
                    "markdownDescription": "Customize applied rule set. This property contains a list of rules whose activation level or parameter values differ from the one provided by default. In [Connected Mode](command:SonarLint.HelpAndFeedbackLinkClicked?%22connectedModeDocs%22), this configuration is overridden by the projects's Quality Profile, as configured on server side and can be **shared among contributors**. See [SonarLint Rules](command:SonarLint.AllRules.focus) view for the list of **locally** available rules.\n\nExample:\n\n    \"sonarlint.rules\": {\n        \"javascript:S1481\": {\n            \"level\": \"off\",\n         },\n        \"javascript:S103\": {\n            \"level\": \"on\",\n            \"parameters\": {\n                \"maximumLineLength\": \"120\"\n            }\n        }\n    }\n",
                    "patternProperties": {
                        "^[^:]+:[^:]+$": {
                            "type": "object",
                            "markdownDescription": "Property names are rule keys in the form: `repo:key`",
                            "properties": {
                                "level": {
                                    "type": "string",
                                    "enum": [
                                        "off",
                                        "on"
                                    ],
                                    "markdownDescription": "When set to `off`, disable the rule. When set to `on`, enable the rule."
                                },
                                "parameters": {
                                    "type": "object",
                                    "markdownDescription": "Rule parameters. See rule description for accepted parameters. E.g `{ \"intParam\": \"123\" }`."
                                },
                                "additionalProperties": false
                            }
                        }
                    },
                    "additionalProperties": false
                },
                "sonarlint.connectedMode.servers": {
                    "deprecationMessage": "The setting is deprecated. Use `sonarlint.connectedMode.connections.sonarqube` or `sonarlint.connectedMode.connections.sonarcloud` instead.",
                    "type": "array",
                    "scope": "application",
                    "default": [],
                    "markdownDescription": "Configure one or more connection(s) to SonarQube (Server, Cloud). For security reasons, the token should not be stored in SCM with workspace settings. The `serverId` can be any identifier and will be referenced in `#sonarlint.connectedMode.project#`.\n\nExample for SonarQube Cloud:\n\n    \"sonarlint.connectedMode.servers\": [\n      {\n        \"serverId\": \"my_orga_in_sonarcloud.io\",\n        \"serverUrl\": \"https://sonarcloud.io\",\n        \"organizationKey\": \"my_organization\",\n        \"token\": \"V2VkIE1...\"\n      }\n    ]\n\nExample for SonarQube Server:\n\n    \"sonarlint.connectedMode.servers\": [\n      {\n        \"serverId\": \"my_sonarqube\",\n        \"serverUrl\": \"https://sonar.mycompany.com\",\n        \"token\": \"V2VkIE1...\"\n      }\n    ]",
                    "items": {
                        "properties": {
                            "serverId": {
                                "type": "string",
                                "description": "A unique identifier for this server connection. Will be referenced from `#sonarlint.connectedMode.project#`"
                            },
                            "serverUrl": {
                                "type": "string",
                                "description": "URL of the server. Use https://sonarcloud.io for SonarQube Cloud."
                            },
                            "token": {
                                "type": "string",
                                "description": "Token generated from My Account>Security in SonarQube (Server, Cloud)"
                            },
                            "organizationKey": {
                                "type": "string",
                                "description": "Only used for SonarQube Cloud"
                            }
                        },
                        "additionalProperties": false
                    }
                },
                "sonarlint.connectedMode.connections.sonarqube": {
                    "order": 2,
                    "type": "array",
                    "scope": "application",
                    "default": [],
                    "markdownDescription": "Connect Sonarlint IDE to SonarQube Server to apply the same code quality and security standards as your team. Analyze more languages, detect more issues **on the whole project**, receive notifications about the quality gate status, and more. Quality Profiles and file exclusion settings defined on the server are shared between all connected users. Please find the documentation [here](https://docs.sonarsource.com/sonarqube-for-vs-code/team-features/connected-mode/)",
                    "items": {
                        "type": "object",
                        "properties": {
                            "connectionId": {
                                "type": "string",
                                "description": "A unique identifier for this connection to be used as a reference in `#sonarlint.connectedMode.project#`. Only needed if you plan to use multiple connections to SonarQube (Server, Cloud)."
                            },
                            "serverUrl": {
                                "type": "string",
                                "description": "URL of the SonarQube Server."
                            },
                            "token": {
                                "type": "string",
                                "description": "Token generated from 'My Account>Security' in SonarQube Server"
                            },
                            "disableNotifications": {
                                "type": "boolean",
                                "description": "Sonarlint will show notifications for bound projects when there are new issues assigned to you, or when the quality gate status changed. Set to false to disable all notifications for projects bound to this connection."
                            }
                        },
                        "additionalProperties": false,
                        "required": [
                            "serverUrl"
                        ],
                        "examples": [
                            {
                                "serverUrl": "https://<replace_with_your_sonarqube_server_url>"
                            },
                            {
                                "connectionId": "MyCompanySonarQube",
                                "serverUrl": "https://<replace_with_your_sonarqube_server_url>",
                                "disableNotifications": false
                            }
                        ]
                    }
                },
                "sonarlint.connectedMode.connections.sonarcloud": {
                    "order": 3,
                    "type": "array",
                    "scope": "application",
                    "default": [],
                    "markdownDescription": "Connect Sonarlint IDE to SonarQube Cloud to apply the same code quality and security standards as your team. Analyze more languages, detect more issues **on the whole project**, receive notifications about the quality gate status, and more. Quality Profiles and file exclusion settings defined on the server are shared between all connected users. Please find the documentation [here](https://docs.sonarsource.com/sonarqube-for-vs-code/team-features/connected-mode/)",
                    "items": {
                        "type": "object",
                        "properties": {
                            "connectionId": {
                                "type": "string",
                                "description": "A unique identifier for this connection to be used as a reference in `#sonarlint.connectedMode.project#`. Only needed if you plan to use multiple connections to SonarQube (Server, Cloud)."
                            },
                            "region": {
                                "type": "string",
                                "enum": [
                                    "EU",
                                    "US"
                                ],
                                "description": "Region of the SonarQube Cloud instance. Use 'US' for `sonarqube.us`, 'EU' for `sonarcloud.io`."
                            },
                            "organizationKey": {
                                "type": "string",
                                "description": "A SonarQube Cloud organization key. If you want to bind different projects that are in different organizations, simply declare multiple connections."
                            },
                            "token": {
                                "type": "string",
                                "description": "Token generated from 'My Account > Security' in SonarQube Cloud"
                            },
                            "disableNotifications": {
                                "type": "boolean",
                                "description": "Sonarlint will show notifications for bound projects when there are new issues assigned to you, or when the quality gate status changed. Set to false to disable all notifications for projects bound to this connection."
                            }
                        },
                        "additionalProperties": false,
                        "required": [
                            "organizationKey"
                        ],
                        "examples": [
                            {
                                "organizationKey": "<replace_with_your_sonarqube_cloud_organization_key>"
                            },
                            {
                                "connectionId": "MyOrganization",
                                "organizationKey": "<replace_with_your_sonarqube_cloud_organization_key>",
                                "disableNotifications": false
                            }
                        ]
                    }
                },
                "sonarlint.connectedMode.project": {
                    "order": 4,
                    "markdownDescription": "Bind the current workspace folder to a [SonarQube Server](command:SonarLint.HelpAndFeedbackLinkClicked?%22sonarQubeProductPage%22) or [SonarQube Cloud](command:SonarLint.HelpAndFeedbackLinkClicked?%5B%7B%22id%22%3A%22sonarCloudProductPage%22%2C%22utm%22%3A%7B%22content%22%3A%22settings-connected-mode%22%2C%22term%22%3A%22bind-current-workspace%22%7D%7D%5D) project. Requires connection details to be defined in the setting `#sonarlint.connectedMode.connections.sonarqube#` or `#sonarlint.connectedMode.connections.sonarcloud#`.\n\nBinding a workspace folder to a server project allows Sonarlint to match, as much as possible, the same rules and settings as found on the server, and hence share the analysis configuration with other contributors.\n\nExample:\n\n    \"sonarlint.connectedMode.project\": {\n      \"projectKey\": \"my_project\",\n      \"connectionId\":\"my_connection_id\"\n    }\n\n",
                    "examples": [
                        {
                            "projectKey": "<replace_with_server_project_key>"
                        },
                        {
                            "connectionId": "<replace_with_connection_id>",
                            "projectKey": "<replace_with_server_project_key>"
                        }
                    ],
                    "default": {},
                    "anyOf": [
                        {
                            "type": "object",
                            "properties": {
                                "serverId": {
                                    "type": "string",
                                    "description": "Identifier of the server connection declared in `#sonarlint.connectedMode.connections.sonarqube#` or `#sonarlint.connectedMode.connections.sonarcloud#`"
                                },
                                "projectKey": {
                                    "type": "string",
                                    "description": "Key of the project in SonarQube (Server, Cloud)"
                                }
                            },
                            "additionalProperties": false,
                            "required": [
                                "serverId",
                                "projectKey"
                            ],
                            "deprecationMessage": "Replace `serverId` attribute by `connectionId`."
                        },
                        {
                            "type": "object",
                            "properties": {
                                "connectionId": {
                                    "type": "string",
                                    "description": "Identifier of the server connection declared in `#sonarlint.connectedMode.connections.sonarqube#` or `#sonarlint.connectedMode.connections.sonarcloud#`"
                                },
                                "projectKey": {
                                    "type": "string",
                                    "description": "Key of the project in SonarQube Server or SonarQube Cloud (can be found on project homepage)"
                                }
                            },
                            "additionalProperties": false,
                            "required": [
                                "projectKey"
                            ]
                        }
                    ],
                    "scope": "resource"
                },
                "sonarlint.automaticAnalysis": {
                    "order": 5,
                    "type": "boolean",
                    "default": true,
                    "markdownDescription": "Enable or disable on-the-fly analysis of files you work on. When enabled, Sonarlint IDE will automatically analyze open files and show findings in real-time.",
                    "scope": "application"
                },
                "sonarlint.pathToNodeExecutable": {
                    "order": 10,
                    "type": "string",
                    "markdownDescription": "Path to a Node.js executable (versions above 20.12.0, or 22.11.0) used to analyze JavaScript and TypeScript code. \nOn Windows, backslashes must be escaped, e.g. `C:\\\\Program Files\\\\NodeJS\\\\20-lts\\\\bin\\\\node.exe`",
                    "scope": "machine"
                },
                "sonarlint.pathToCompileCommands": {
                    "order": 11,
                    "type": "string",
                    "markdownDescription": "Path to the active compilation database, e.g. `C:\\\\Repos\\\\MyProject\\\\compile_commands.json`",
                    "scope": "resource"
                },
                "sonarlint.testFilePattern": {
                    "order": 12,
                    "type": "string",
                    "default": "",
                    "markdownDescription": "Files whose name match this [glob pattern](https://docs.oracle.com/javase/tutorial/essential/io/fileOps.html#glob) are considered as test files by analyzers. Most rules are *not* evaluated on test files.\n\nIn [Connected Mode](command:SonarLint.HelpAndFeedbackLinkClicked?%22connectedModeDocs%22), this setting is configured **on the server-side** and shared among all contributors.\n\nExample: `**/test/**,**/*test*,**/*Test*`",
                    "scope": "resource"
                },
                "sonarlint.analysisExcludesStandalone": {
                    "order": 13,
                    "type": "string",
                    "default": "**/node_modules/**,**/.angular/**,**/.next/**,**/.nuxt/**,**/.cargo/**,**/.cache/**,**/.tmp/**,**/.log/**,**/.git/**,**/.svn/**,**/.hg/**,**/.idea/**,**/.vscode/**,**/target/surefire-reports/**,**/target/failsafe-reports/**,**/target/site/**,**/target/generated-resources/**,**/target/*.jar,**/target/*.war,**/target/*.ear,**/target/*.zip,**/target/*.tar,**/target/*.gz,**/build/tmp/**,**/build/reports/**,**/build/distributions/**,**/build/libs/**,**/build/publications/**,**/build/resources/**,**/build/outputs/**,**/build/intermediates/transforms/**,**/*.md,**/*.txt,**/*.log,**/*.lock,**/*.bak,**/*.tmp,**/*.swp,**/*.swo,**/*.DS_Store,**/*.csv,**/*.tsv,**/*.xls,**/*.xlsx,**/*.doc,**/*.docx,**/*.pdf,**/*.png,**/*.jpg,**/*.jpeg,**/*.gif,**/*.svg,**/*.ico,**/*.woff,**/*.woff2,**/*.ttf,**/*.eot,**/*.otf,**/*.mp3,**/*.mp4,**/*.zip,**/*.tar,**/*.gz,**/*.rar,**/*.7z,**/*.exe,**/*.dll,**/*.so,**/*.dylib,**/*.a,**/*.o,**/*.class,**/*.jar,**/*.war,**/*.ear,**/*.bin,**/*.dat,**/*.db,**/*.sqlite,**/*.dump,**/*.rdb,**/*.rdx,**/*.pid",
                    "markdownDescription": "Files whose name match this [glob pattern](https://docs.oracle.com/javase/tutorial/essential/io/fileOps.html#glob) will not be processed by analyzers. In [Connected Mode](command:SonarLint.HelpAndFeedbackLinkClicked?%22connectedModeDocs%22) with SonarQube Server or SonarQube Cloud, this property will be ignored and the server's exclusion settings will be applied. No rules are evaluated on excluded files. Example: `**/lib/**,**/*generated*`",
                    "scope": "resource"
                },
                "sonarlint.ls.javaHome": {
                    "order": 20,
                    "type": "string",
                    "markdownDescription": "Path to a Java Runtime Environment (17 or more recent) used to launch the Sonarlint Language Server.\n* On Windows, backslashes must be escaped, e.g. `C:\\\\Program Files\\\\Java\\\\jdk-17` \n* On macOS, this path should include the `/Contents/Home` directory, e.g `/Library/Java/JavaVirtualMachines/corretto-17.0.5/Contents/Home`",
                    "scope": "machine"
                },
                "sonarlint.ls.vmargs": {
                    "order": 21,
                    "type": "string",
                    "markdownDescription": "Extra JVM arguments used to launch the SonarLint Language Server. e.g. `-Xmx1024m`",
                    "scope": "machine"
                },
                "sonarlint.output.showVerboseLogs": {
                    "order": 90,
                    "type": "boolean",
                    "default": false,
                    "description": "Enable verbose log level in the Sonarlint IDE output.",
                    "scope": "window"
                },
                "sonarlint.analyzerProperties": {
                    "order": 92,
                    "type": "object",
                    "patternProperties": {
                        "^.*$": {
                            "type": "string",
                            "markdownDescription": "One entry value"
                        },
                        "additionalProperties": false
                    },
                    "markdownDescription": "Extra properties that could be passed to the code analyzers. Only for advanced use cases.",
                    "scope": "resource"
                },
                "sonarlint.trace.server": {
                    "order": 98,
                    "default": "off",
                    "description": "Traces the communication between VS Code and the SonarLint language server.",
                    "scope": "window",
                    "anyOf": [
                        {
                            "type": "string",
                            "enum": [
                                "off",
                                "messages",
                                "verbose"
                            ],
                            "default": "off"
                        },
                        {
                            "type": "object",
                            "properties": {
                                "verbosity": {
                                    "type": "string",
                                    "enum": [
                                        "off",
                                        "messages",
                                        "verbose"
                                    ],
                                    "default": "off"
                                },
                                "format": {
                                    "type": "string",
                                    "enum": [
                                        "text",
                                        "json"
                                    ],
                                    "default": "text"
                                }
                            },
                            "additionalProperties": false
                        }
                    ]
                },
                "sonarlint.disableTelemetry": {
                    "order": 99,
                    "type": "boolean",
                    "default": false,
                    "markdownDescription": "Disable sending anonymous usage statistics to SonarSource. Click [here](https://github.com/SonarSource/sonarlint-vscode/blob/master/telemetry-sample.md) to see a sample of the data that are collected.",
                    "scope": "window"
                },
                "sonarlint.focusOnNewCode": {
                    "order": 100,
                    "type": "boolean",
                    "default": false,
                    "markdownDescription": "If enabled, by default, [focusing on new code](https://docs.sonarsource.com/sonarqube-for-vs-code/using/investigating-issues/#focusing-on-new-code) shows issues introduced in the last 30 days.\n\nFor the most accurate and customizable new code definition, use [Connected Mode](https://docs.sonarsource.com/sonarqube-for-vs-code/team-features/connected-mode) with SonarQube (Server, Cloud).",
                    "scope": "machine"
                },
                "sonarlint.earlyAccess.showRegionSelection": {
                    "type": "boolean",
                    "default": false,
                    "markdownDescription": "Show region selection while creating SonarQube Cloud Connection",
                    "scope": "machine"
                },
                "sonarlint.startFlightRecorder": {
                    "type": "boolean",
                    "default": false,
                    "markdownDescription": "Start the language server's flight recorder mode.\n\n⚠ **This feature shares detailed information with SonarSource (logs, telemetry events) that may include _confidential_ data, only enable if requested to help investigate an issue.**",
                    "scope": "machine"
                }
            }
        },
        "commands": [
            {
                "command": "SonarLint.OpenSample",
                "title": "Open Sample Project",
                "description": "Open sample to explore SonarLint features"
            },
            {
                "command": "SonarLint.ShowAllRules",
                "title": "Show All Rules",
                "description": "Open rules view for SonarLint rules"
            },
            {
                "command": "SonarLint.OpenRuleByKey",
                "title": "Open Rule by Key…",
                "description": "Show details for a rule (e.g., java:S1234)"
            },
            {
                "command": "SonarLint.ShowActiveRules",
                "title": "Show Active Rules",
                "description": "Display the rules that are currently active"
            },
            {
                "command": "SonarLint.AnalyseOpenFile",
                "title": "Analyze Active File",
                "description": "Run analysis on the currently active file"
            },
            {
                "command": "SonarQube.ShowAllFindings",
                "title": "Show All Findings",
                "description": "List all issues found by for the workspace"
            },
            {
                "command": "SonarLint.HelpAndFeedback",
                "title": "Help & Feedback",
                "description": "Open SonarLint documentation & community links"
            },
            {
                "command": "SonarLint.ShowInactiveRules",
                "title": "Show Inactive Rules",
                "description": "Display rules not currently active"
            },
            {
                "command": "SonarLint.EnableVerboseLogs",
                "title": "Enable Verbose Logs",
                "description": "Increase logging detail to verbose"
            },
            {
                "command": "SonarLint.InstallManagedJre",
                "title": "Install Managed JRE",
                "description": "Download and configure a managed JRE"
            },
            {
                "command": "SonarQube.ShowOpenFilesOnly",
                "title": "Show Findings for Open Files",
                "description": "Filter findings on currently opened files"
            },
            {
                "command": "SonarQube.DumpBackendThreads",
                "title": "Dump Backend Threads",
                "description": "Capture a thread dump of the analysis backend"
            },
            {
                "command": "SonarQube.ShowConnectionView",
                "title": "Show Connections",
                "description": "Open the Connections view"
            },
            {
                "command": "SonarQube.ShowCurrentFileOnly",
                "title": "Show Findings for Current File",
                "description": "Filter the findings for active file only"
            },
            {
                "command": "SonarLint.ShowSonarLintOutput",
                "title": "Show SonarLint Output",
                "description": "Focus the SonarLint output channel"
            },
            {
                "command": "SonarQube.ShowHighSeverityOnly",
                "title": "Show High Severity Only",
                "description": "Filter findings to high-severity issues"
            },
            {
                "command": "SonarLint.ShowMCPConfigurations",
                "title": "Show MCP Configurations",
                "description": "Show MCP configuration settings"
            },
            {
                "command": "SonarQube.ShowFixableIssuesOnly",
                "title": "Show Fixable Issues Only",
                "description": "Filter findings that have available quick fixes"
            },
            {
                "command": "SonarLint.OpenSonarQubeRulesFile",
                "title": "Open SonarQube Rules File",
                "description": "Open rules configuration file, if present"
            },
            {
                "command": "SonarLint.EnableLogsAndShowOutput",
                "title": "Enable Logs and Show Output",
                "description": "Enable logging and switch to SonarLint output channel"
            },
            {
                "command": "SonarLint.ScanForHotspotsInFolder",
                "title": "Scan Folder for Security Hotspots",
                "description": "Run a hotspot scan in a chosen folder."
            },
            {
                "command": "SonarLint.AutoBindWorkspaceFolders",
                "title": "Auto-Bind Workspace Folders",
                "description": "Automatically connection bind workspace folder"
            },
            {
                "command": "SonarLint.OpenMCPServerConfiguration",
                "title": "Open MCP Server Configuration",
                "description": "Open configuration for MCP servers"
            },
            {
                "command": "SonarLint.IntroduceSonarQubeRulesFile",
                "title": "Create SonarQube Rules File",
                "description": "Add a rules file to the workspace"
            },
            {
                "command": "SonarLint.ConfigureCompilationDatabase",
                "title": "Configure Compilation Database",
                "description": "Select/Set path to a compile_commands.json"
            },
            {
                "command": "SonarLint.ShareConnectedModeConfiguration",
                "title": "Share Connected Mode Configuration",
                "description": "Generate settings for connected-mode binding"
            }
        ]
    }
}
